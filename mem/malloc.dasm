;; Memory allocation.
;; by José Manuel Díez (jdiez)
;; licensed under MIT.
;;
;; http://u.jdiez.me/0x42c/kernel.html#x01e-kern-malloc
;; declares: malloc

; void* malloc(int owner, int words)
:malloc
    set push, i
    set i, [mempointer]
    
    :malloc_loop
        ife [i], 0xffff
            set pc, malloc_found_free
        
        add i, 1
        add i, [i]
        add i, 2
        
        set pc, malloc_loop
    :malloc_found_free
        ife i, [userspacemem] ; beginning
            set pc, malloc_allocate
        
        add i, 1
        
        ife [i], a
            set pc, malloc_prepare
        ifg [i], a
            set pc, malloc_check_overhead
            
        add i, 1
        add i, [i] ; size of block
        
        set pc, malloc_loop    
        
    :malloc_check_overhead
        set push, b
        set b, [i]
        sub b, a
        ifg b, 3 ; plenty of space for overhead
            set pc, malloc_check_end
        
        sub i, 1
        set b, pop
        set [i], b ; it isn't worth dividing the space
        set push, i
        set pc, malloc_end
        
        :malloc_check_end
            set b, pop
            set pc, malloc_prepare    
        
    :malloc_prepare
        sub i, 1
        set pc, malloc_allocate
        
    :malloc_allocate
        set push, i
        set push, i
        set [i], b
        add i, 1
        set [i], a
        add i, 1
        add i, a
        set b, pop
        set [i], b ; header pointer
        
        add i, 1
        set a, i
        set b, [userspaceend]
        jsr set_initial_blocks
        set pc, malloc_end
           
    :malloc_end
        set a, pop
        add a, 2 ; real start of memory
        set i, pop
        set pc, pop
